/*! YOOtheme Pro v2.4.10 | https://yootheme.com */
!function (s) {
  "use strict";
  s.on("body", "submit", ".js-kickyooaddonshubspot-form", function (e) {
    e.preventDefault();
    var a = e.target, n = s.$(".message", a), v = true;

    function r(e, t) {
      if (typeof e === 'object' && e.statusText) {
        s.removeClass(n, "uk-hidden uk-text-danger"), s.addClass(n, "uk-text-" + (t ? "danger" : "success")), n.innerHTML = e.statusText;

        if (e.wait) {
          setTimeout(function(){
            UIkit.util.$('.el-button', a).removeAttribute('disabled');
          }, e.wait * 1000);
        }
      } else {
        s.removeClass(n, "uk-hidden uk-text-danger"), s.addClass(n, "uk-text-" + (t ? "danger" : "success")), n.innerHTML = e;
      }

      UIkit.util.$$('.uk-form-success', a).forEach(function(el) {
        s.removeClass(el, 'uk-form-success');
      });

      UIkit.util.$$('.kickicon', a).forEach(function(el) {
        el.remove();
      });

      setTimeout(function(){
        n.innerText = '',
        UIkit.util.$('.el-button', a).removeAttribute('disabled'),
        s.addClass(n, "uk-hidden")
      }, 5000);
    }

    function b(e,st,message)
    {
      var icon = document.createElement('span'),
        spans = e.parentNode.querySelectorAll("span.kickicon"),
        icons = e.parentNode.querySelectorAll("span.uk-form-icon-flip:not(.kickicon)"),
        m = (typeof(message) !== 'undefined') ? message : e.getAttribute('data-message');

      icon.setAttribute('class', 'uk-form-icon uk-text-' + (st ? "danger" : "success") + ' uk-form-icon-flip kickicon');
      icon.setAttribute('uk-icon', 'icon: ' + (st ? "close" : "check"));

      if (icons.length || e.getAttribute('type') == 'date' || e.tagName == 'SELECT')
      {
        icon.setAttribute('style', 'right: 30px');
      }

      if(spans.length ) {
        e.parentNode.removeChild(spans[0]);
      }

      s.removeClass(e, "uk-form-" + (st ? "success" : "danger")),
        s.addClass(e, "uk-form-" + (st ? "danger" : "success"));

      if (e.getAttribute('type') != 'checkbox' && e.getAttribute('type') != 'radio')
      {
        e.parentNode.append(icon);
      }

      if (e.getAttribute('type') == 'checkbox' || e.getAttribute('type') == 'radio')
      {
        if (st) {
          s.addClass(e.parentNode, 'uk-text-danger');
        } else {
          s.removeClass(e.parentNode, 'uk-text-danger');
        }
      }

      if(st && m !== '' && m !== null && typeof m !== undefined) {
        UIkit.notification({
          message: m,
          timeout: 2000,
          status: 'danger',
          pos: 'top-right'
        });
      }
    }

    UIkit.util.$$('[required]', a).forEach(function(el) {
      if (el.getAttribute('type') == 'checkbox') {
        if (!el.checked) {
          b(el,true);
          v = false;
        } else {
          b(el,false);
        }
      }

      if (el.getAttribute('type') == 'radio') {
        var checked = false;
        UIkit.util.$$('input[name=' + el.getAttribute('name') + ']', a).forEach(function(radio) {
          if (radio.checked)
          {
            checked = true;
          }
        });
        if (!checked) {
          b(el,true);
          v = false;
        } else {
          b(el,false);
        }
      }

      // Inputs or Textarea
      if ((el.tagName == 'INPUT' || el.tagName == 'TEXTAREA') && el.getAttribute('type') != 'checkbox') {
        if (el.value.length < 1) {
          b(el,true);
          v = false;
        } else {
          b(el,false);
        }
      }

      // Select
      if (el.tagName == 'SELECT') {
        if (!el.value) {
          b(el,true);
          v = false;
        } else {
          b(el,false);
        }
      }
    });

    UIkit.util.$$('input[type=email]', a).forEach(function(el) {
      var regex= /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i;
      if (el.value.length > 0) {
        if (!regex.test(el.value)) {
          b(el,true, el.getAttribute('data-emailmessage'));
          v = false;
        } else {
          b(el,false);
        }
      }
    });

    UIkit.util.$$('input[data-equal]', a).forEach(function(el) {
      var equal = el.getAttribute('data-equal'),
        eqaulfield = UIkit.util.$('#' + equal);

      if (el.value.length > 0 && eqaulfield.value.length > 0) {
        if (el.value != eqaulfield.value){
          b(el,true, el.getAttribute('data-equalmessage'));
          v = false;
        } else {
          b(el,false);
        }
      }
    });

    if(!v)
    {
      return false;
    }

    UIkit.util.$('.el-button', a).setAttribute('disabled', 'disabled');

    s.addClass(n, "uk-hidden"), fetch(s.attr(a, "action"), {method: "post", body: new FormData(a)}).then(re => {
      re.json().then(t => {
        if (re.ok) {
          const {message: m, redirect: s, notification: n, settings: set, actionurl: actionurl} = t;
          if (set) {
            UIkit.util.$('input[name="settings"]', a).value = set;
            a.action = actionurl;
            UIkit.util.$('.el-button', a).removeAttribute('disabled');
          }
          n ? ( UIkit.notification({
              message: n.message,
              timeout: n.timeout,
              status: n.status,
              pos: n.pos
            }), a.reset()) :
          m ? (r(m), a.reset()) : s ? window.location.href = s : r("Invalid response.", !0)
        } else r(t, !0)
      }, () => r(re.statusText, !0))
    });
  })
}(UIkit.util);
