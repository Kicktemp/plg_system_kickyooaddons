/*! YOOtheme Pro v2.4.10 | https://yootheme.com */
!function (s) {
    "use strict";
    UIkit.util.$$('a.kick-faved').forEach(function(el) {
        check(el);
        el.addEventListener('click', function (e){
            e.preventDefault();
            faved(el);
        });
    });

    function faved(el)
    {
        let options = JSON.parse(el.dataset.options);
        let compareStorage =  JSON.parse(getCookie(el.dataset.group));
        if(compareStorage == null) compareStorage = [];

        const idx = compareStorage.findIndex(d => d.id === el.dataset.articleid);
        if (idx >= 0) {
            compareStorage.splice(idx, 1);
            UIkit.notification({
                message: options.remove_text,
                timeout: options.timeout,
                status: options.removestatus,
                pos: options.pos
            });
        } else {
            compareStorage.push({
                id: el.dataset.articleid
            });
            UIkit.notification({
                message: options.add_text,
                timeout: options.timeout,
                status: options.addstatus,
                pos: options.pos
            });
        }

        setCookie(el.dataset.group, JSON.stringify(compareStorage), options.expired);
        check(el);
    }



    function check(el)
    {
        let compareStorage = JSON.parse(getCookie(el.dataset.group));
        if(compareStorage == null) compareStorage = [];
        const idx = compareStorage.findIndex(d => d.id === el.dataset.articleid);

        if (idx >= 0) {
            UIkit.util.addClass(el, 'faved');
        }
        else {
            UIkit.util.removeClass(el, 'faved');
        }
    }

    function getCookie(cname) {
        let name = cname + "=";
        let decodedCookie = decodeURIComponent(document.cookie);
        let ca = decodedCookie.split(';');
        for(let i = 0; i <ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return null;
    }

    function setCookie(cname, cvalue, exdays) {
        const d = new Date();
        d.setTime(d.getTime() + (exdays*24*60*60*1000));
        let expires = "expires="+ d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
}(UIkit.util);

